@inject NavigationManager navigationManager
@inject RecipeAZ.Services.RecipeService _recipeService

<div>
    <MudLink @onclick="@(() => NavigateToUser())"
             Typo="Typo.h6"
             Color="Color.Dark"
             Underline="Underline.None">
        @_recipeService.Recipe?.User?.UserName
    </MudLink>
    <p />   
    <TextLinkMixComponent Text="@_recipeService.Recipe?.Notes" />
    @if (CanEdit && Editing) {
        <MudIconButton Icon="@Icons.Material.Filled.Edit" Size="Size.Small" @onclick="() => {
            OriginalNotes = Recipe?.Notes ?? string.Empty;    
            notesEditOpen = true;                
        }" />
    }
    
</div>
@if (_recipeService.Recipe != null) {
    <MudPopover Open="@notesEditOpen" Fixed="false" Class="px-4 pt-4" AnchorOrigin="Origin.TopLeft"
        Style="width:300px;height:490px"
    >
        <div class="d-flex flex-column">
            <MudTextField @bind-Value="_recipeService.Recipe.Notes" Lines="20" />
            <div class="d-flex d-row">
                Don't forget to save your recipe!
                <MudIconButton Icon="@Icons.Material.Filled.CheckCircle" Class="ml-auto mr-0 mb-1" Size="Size.Large" Color="Color.Success" @onclick="async () => {
                    notesEditOpen = false;
                }" />
                <MudIconButton Icon="@Icons.Material.Filled.Cancel" Class="ml-0 mr-0 mb-1" Size="Size.Large" Color="Color.Error" @onclick="async () => {
                    _recipeService.Recipe.Notes = OriginalNotes;
                    notesEditOpen = false;                    
                }" />
            </div>            
        </div>
    </MudPopover>
}
@code {

    [CascadingParameter(Name = "RecipeParam")]
    public Recipe? Recipe { get; set; }
    [CascadingParameter(Name = "CanEditParam")]
    public bool CanEdit { get; set; }
    [CascadingParameter(Name = "EditingParam")]
    public bool Editing { get; set; }
    private string OriginalNotes { get; set; } = string.Empty;
    private bool notesEditOpen = false;

    private void NavigateToUser() {
        navigationManager.NavigateTo("/profile/" + _recipeService.Recipe.User.Id);
    }
}