@page "/"
@using RecipeAZ.Pages.RecipeComponents
@inject IDbContextFactory<DataContext> _contextFactory
@inject NavigationManager navigationManager

<PageTitle>RecipeAZ</PageTitle>

<div style="background-color:white;padding:30px;margin-bottom:14px;border-radius:10px;">
    @if (FeaturedRecipe != null) {
        <MudGrid Class="featured-recipe-grid">
            <MudItem xs="12" sm="4" md="3">
                <div class="clickable image-container" @onclick="@(() => NavigateToRecipe(FeaturedRecipe.RecipeId))">
                    <MudImage Src="@FeaturedRecipe.ImagePath" Class="rounded-lg mud-image-cropped" />
                </div>                
            </MudItem>
            <MudItem xs="12" sm="8" md="9">
                <MudGrid>
                    <MudItem xs="12">
                        <MudLink @onclick="@(() => NavigateToRecipe(FeaturedRecipe.RecipeId))" 
                            Typo="Typo.h3" 
                            Color="Color.Dark"
                            Underline="Underline.None">Featured Recipe: @FeaturedRecipe.Name
                        </MudLink>
                         <p/>
                        <MudLink @onclick="@(() => NavigateToProfile(FeaturedRecipe.User.Id))"
                            Typo="Typo.h6"
                            Color="Color.Dark"
                            Underline="Underline.None">
                            by @FeaturedRecipe.User.UserName on @FeaturedRecipe.CreatedAt.ToShortDateString()
                        </MudLink>
                    </MudItem>
                    <MudItem xs="12">
                        @foreach (RecipeTag recipeTag in FeaturedRecipe.RecipeTags) {
                            <TagChip Tag="@recipeTag.Tag" Removable="false" />
                            
                        }
                    </MudItem>
                    <MudItem xs="12" Class="text-truncate-height">
                        <TextLinkMixComponent Text="@FeaturedRecipe.Description" />
                    </MudItem>
                </MudGrid>
            </MudItem>
        </MudGrid>
    }    

<p />
<h6>Browse popular Tags:</h6>
<p/>
<div>
    <MudGrid>
        @foreach (Tag tag in TopTags ?? new List<Tag>()) {
            <MudItem Class="pa-0">
                <TagChip Tag="@tag" Size="Size.Medium" Color="Color.Success" />                
            </MudItem>            
        }
    </MudGrid>
</div>
<p />
<MudGrid Spacing="0">
        <MudItem xs="6" >
        <MudList>
            <MudListSubheader>Browse popular recipes</MudListSubheader>
                <div style="border-style:solid;border-width:0px 1px 1px 0px;border-radius:15px;border-color:#81C784">
                @foreach (Recipe recipe in TopRecipes) {
                    <MudListItem>
                        <MudGrid Spacing="0">
                            <MudItem xs="12" Class="d-flex flex-row">
                                <div class="clickable" @onclick="@(() => NavigateToRecipe(recipe.RecipeId))" style="margin-right:5px;">
                                    <MudImage Src="@recipe.ImagePath" Height="50" Class="rounded-1"/>
                                </div>
                                <div>
                                    <MudLink @onclick="@(() => NavigateToRecipe(recipe.RecipeId))"
                                        Typo="Typo.h6"
                                        Color="Color.Dark"
                                        Underline="Underline.None"
                                        Class="index-recipe-ellipsis">
                                        @recipe.Name
                                    </MudLink>
                                    <p style="margin: 0;" />
                                    <MudLink @onclick="@(() => NavigateToProfile(recipe.User.Id))"
                                        Typo="Typo.caption"
                                        Color="Color.Dark"
                                        Underline="Underline.None">
                                        by @recipe.User.UserName on @recipe.CreatedAt.ToShortDateString()
                                    </MudLink>
                                </div>
                            </MudItem>

                            <MudItem>
                                <p style="margin: 0;" />
                                <div class="d-flex flex-row">
                                    <MudIcon Icon="@Icons.Material.Filled.Favorite" Color="Color.Success" />
                                    @recipe.UsersWhoLikeMe.Count
                                    @foreach (RecipeTag recipeTag in recipe.RecipeTags) {
                                        <MudChip Size="Size.Small">
                                            <MudText>@recipeTag.Tag.Name</MudText>
                                        </MudChip>
                                    }
                                </div>

                            </MudItem>
                        </MudGrid>
                    </MudListItem>
                }
            </div>
            
        </MudList>
    </MudItem>
    <MudItem xs="6">
        <MudList>
            <MudListSubheader>Browse recent recipes</MudListSubheader>
                <div style="border-style:solid;border-width:1px 0px 0px 1px;border-radius:15px;border-color:#81C784">
            @foreach (Recipe recipe in RecentRecipes) {               
                <MudListItem>
                    <MudGrid Spacing="0">
                        <MudItem xs="12" Class="d-flex flex-row">
                            <div class="clickable" @onclick="@(() => NavigateToRecipe(recipe.RecipeId))" style="margin-right:5px;">
                                <MudImage Src="@recipe.ImagePath" Height="50" Class="rounded-1"/>
                            </div>
                            <div>
                                <MudLink @onclick="@(() => NavigateToRecipe(recipe.RecipeId))"
                                        Typo="Typo.h6"
                                        Color="Color.Dark"
                                        Underline="Underline.None"
                                        Class="index-recipe-ellipsis">
                                    @recipe.Name
                                </MudLink>
                                <p style="margin: 0;" />
                                <MudLink @onclick="@(() => NavigateToProfile(recipe.User.Id))"
                                        Typo="Typo.caption"
                                        Color="Color.Dark"
                                        Underline="Underline.None">
                                        by @recipe.User.UserName on @recipe.CreatedAt.ToShortDateString()
                                </MudLink>
                            </div>
                        </MudItem>

                        <MudItem>
                            <p style="margin: 0;" />
                            <div class="d-flex flex-row">
                                <MudIcon Icon="@Icons.Material.Filled.Favorite" Color="Color.Success" />
                                @recipe.UsersWhoLikeMe.Count
                                @foreach (RecipeTag recipeTag in recipe.RecipeTags) {
                                    <TagChip Tag="@recipeTag.Tag" Size="Size.Small" />                                    
                                }
                            </div>

                        </MudItem>
                    </MudGrid>
                </MudListItem>
            }
            </div>
        </MudList>
    </MudItem>
</MudGrid>
</div>

@code {
    Recipe? FeaturedRecipe { get; set; }
    List<Tag>? TopTags { get; set; } = new();
    List<Recipe> TopRecipes { get; set; } = new();
    List<Recipe> RecentRecipes { get; set; } = new();
    private DataContext? _dataContext;
    protected override async Task OnInitializedAsync() {
        await base.OnInitializedAsync();
        _dataContext = await _contextFactory.CreateDbContextAsync();
        string featuredRecipeId = await GetRandomRecipeIdAsync();
        FeaturedRecipe = await GetRecipeWithUserAsync(featuredRecipeId);
        TopTags = await GetTopTagsAsync();

        TopRecipes = await _dataContext.Recipes
            .Include(r => r.User)
            .Include(r => r.UsersWhoLikeMe)
            .Include(r => r.RecipeTags)
                .ThenInclude(rt => rt.Tag)
            .OrderByDescending(r => r.UsersWhoLikeMe.Count)
            .Take(10)
            .ToListAsync();

        RecentRecipes = await _dataContext.Recipes
            .Include(r => r.User)            
            .Include(r => r.RecipeTags)
                .ThenInclude(rt => rt.Tag)
            .OrderByDescending(r => r.CreatedAt)
            .Take(10)
            .ToListAsync();        
    }

    private void NavigateToRecipe(string recipeId) {
        navigationManager.NavigateTo("/recipe/" + recipeId);            
    }

    private void NavigateToProfile(string userId) {
        navigationManager.NavigateTo("/profile/" + userId);
    }

    public async Task<string> GetRandomRecipeIdAsync() {
        string? randomRecipeId = await _dataContext.Recipes
       .OrderBy(r => Guid.NewGuid())
       .Select(r => r.RecipeId)
       .FirstOrDefaultAsync() ?? "1";

        return randomRecipeId;
    }

    public async Task<Recipe> GetRecipeWithUserAsync(string recipeId) {
        Recipe? recipe = await _dataContext.Recipes
            .Include(r => r.User)
            .Include(r => r.RecipeTags)
                .ThenInclude(rt => rt.Tag)
            .FirstOrDefaultAsync(r => r.RecipeId == recipeId) ?? new();

        return recipe;
    }

    private async Task<List<Tag>> GetTopTagsAsync() {
        List<Tag> topTags = await _dataContext.Tags
            .Include(t => t.RecipeTags)
            .OrderByDescending(t => t.RecipeTags.Count)
            .Take(10)
            .ToListAsync();
        return topTags;
    }
}